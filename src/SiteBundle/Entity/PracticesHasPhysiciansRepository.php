<?php

namespace SiteBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PracticesHasPhysiciansRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PracticesHasPhysiciansRepository extends EntityRepository
{

	public function getPracticebyLocationId($practiceId, $practiceLocationId) {
		$queryBuilder = $this->getEntityManager()->createQueryBuilder();
		$queryBuilder->select([
			"practices.practice",
			"practices_locations.address1",
			"practices_locations.address2",
			"practices_locations.city",
			"practices_locations.state",
			"practices_locations.zip",
			"practices_locations.phone",
			"physicians.firstName",
			"physicians.lastName",
			"GROUP_CONCAT(specialties.specialty) as specialty",
		])
			->from("SiteBundle:PracticesHasPhysicians", "practices_has_physicians")
			->leftJoin("SiteBundle:Practices", "practices", "WITH", "practices.id = practices_has_physicians.practice")
			->leftJoin("SiteBundle:PracticesLocations", "practices_locations", "WITH", "practices_locations.id = practices_has_physicians.practiceLocation")
			->leftJoin("SiteBundle:Physicians", "physicians", "WITH", "physicians.id = practices_has_physicians.physician")
			->leftJoin("SiteBundle:PhysiciansHasSpecialties", "physicians_has_specialties", "WITH", "physicians_has_specialties.physician = physicians.id")
			->leftJoin("SiteBundle:Specialties", "specialties", "WITH", "physicians_has_specialties.specialty = specialties.id")
			->where("practices_has_physicians.practice = :practices_id")
			->andWhere("practices_has_physicians.practiceLocation = :practice_location_id")
			->groupBy("physicians.id")
			->setParameters(
				array(
					"practices_id" => $practiceId,
					"practice_location_id" => $practiceLocationId
				)
			)
		;

		return $queryBuilder->getQuery()->getResult();
	}


	public function getPhysicianAndSpecialty() {
		$queryBuilder = $this->getEntityManager()->createQueryBuilder();
		$queryBuilder->select([
			"IDENTITY(xref_practice_physician.practiceLocation) as location_id",
			"physician.firstName as first_name",
			"physician.lastName as last_name",
			"GROUP_CONCAT(specialty.specialty SEPARATOR ', ') as specialties",
		])
			->from("SiteBundle:PhysiciansHasSpecialties", "xref_specialties")
			->innerJoin("SiteBundle:Physicians", "physician", "WITH", "xref_specialties.physician = physician.id")
			->innerJoin("SiteBundle:Specialties", "specialty", "WITH", "xref_specialties.specialty = specialty.id")
			->innerJoin("SiteBundle:PracticesHasPhysicians", "xref_practice_physician", "WITH", "xref_specialties.physician = xref_practice_physician.physician")
			->groupBy("physician.id, xref_practice_physician.practiceLocation")
		;
		return $queryBuilder->getQuery()->getResult();
	}

}
